// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resterurnt_Delevery_online.Models;

#nullable disable

namespace Resterurnt_Delevery_online.Migrations
{
    [DbContext(typeof(ResteruntDB))]
    [Migration("20240412215341_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.City", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Rest_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Rest_id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.ItemOrder", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Item_id")
                        .HasColumnType("int");

                    b.Property<int>("Order_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Item_id");

                    b.HasIndex("Order_id");

                    b.ToTable("ItemOrders");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Itemid")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Itemid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.Resterunt", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("City_Id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("City_Id");

                    b.ToTable("Resteruntes");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.Item", b =>
                {
                    b.HasOne("Resterurnt_Delevery_online.Models.Resterunt", "Resterunt")
                        .WithMany("Items")
                        .HasForeignKey("Rest_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resterunt");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.ItemOrder", b =>
                {
                    b.HasOne("Resterurnt_Delevery_online.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("Item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Resterurnt_Delevery_online.Models.Order", "Order")
                        .WithMany("ItemOrders")
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.Order", b =>
                {
                    b.HasOne("Resterurnt_Delevery_online.Models.Item", null)
                        .WithMany("orders")
                        .HasForeignKey("Itemid");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.Resterunt", b =>
                {
                    b.HasOne("Resterurnt_Delevery_online.Models.City", "City")
                        .WithMany("Resterunts")
                        .HasForeignKey("City_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.City", b =>
                {
                    b.Navigation("Resterunts");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.Item", b =>
                {
                    b.Navigation("orders");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.Order", b =>
                {
                    b.Navigation("ItemOrders");
                });

            modelBuilder.Entity("Resterurnt_Delevery_online.Models.Resterunt", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
